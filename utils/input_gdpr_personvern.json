{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 🔒 GDPR og Personvern for AI-systemer\n",
    "\n",
    "> **\"Your data is your data. But how do we make sure it stays that way?\"**\n",
    "\n",
    "Velkommen til din første dype dykk i AI-etikk! I denne notebooken skal vi utforske hvordan GDPR påvirker AI-utvikling og gi deg praktiske verktøy for å bygge personvernvennlige systemer.\n",
    "\n",
    "## 🎯 Hva du lærer i dag\n",
    "\n",
    "✅ Forstå personopplysninger i AI-kontekst  \n",
    "✅ Mestre rettslige grunnlag for databehandling  \n",
    "✅ Navigere automatiserte beslutninger og \"rett til forklaring\"  \n",
    "✅ Implementere Privacy by Design prinsipper  \n",
    "✅ Bygge praktiske verktøy for GDPR-compliance  \n",
    "\n",
    "**💡 Fun fact:** GDPR-bøter kan være opp til 4% av global omsetning eller €20 millioner. Den største boten så langt? €746 millioner til Amazon i 2021!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🚀 La oss starte med å importere våre verktøy\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from faker import Faker\n",
    "import hashlib\n",
    "import uuid\n",
    "from datetime import datetime, timedelta\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "# Sett opp Faker for norske data\n",
    "fake = Faker('no_NO')\n",
    "\n",
    "print(\"🎉 Alle biblioteker lastet! La oss utforske GDPR-verdenen...\")"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 📚 Del 1: GDPR Grunnleggende - Hva er egentlig personopplysninger?\n",
    "\n",
    "La oss starte med å forstå hva som regnes som personopplysninger i AI-sammenheng. Dette er viktigere enn du tror!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🕵️ La oss lage et eksempel datasett og analysere hva som er personopplysninger\n",
    "\n",
    "def create_sample_dataset(n_samples=1000):\n",
    "    \"\"\"Lager et realistisk datasett for en AI-applikasjon\"\"\"\n",
    "    \n",
    "    data = []\n",
    "    for _ in range(n_samples):\n",
    "        record = {\n",
    "            # 🔴 Direkte identifiserbare data\n",
    "            'navn': fake.name(),\n",
    "            'fodselsnummer': fake.ssn(),\n",
    "            'epost': fake.email(),\n",
    "            'telefon': fake.phone_number(),\n",
    "            \n",
    "            # 🟡 Indirekte identifiserbare data\n",
    "            'postnummer': fake.postcode(),\n",
    "            'alder': fake.random_int(18, 80),\n",
    "            'kjonn': fake.random_element(['M', 'F']),\n",
    "            'inntekt': fake.random_int(300000, 1500000),\n",
    "            \n",
    "            # 🟢 Tilsynelatende anonyme data (men er de det?)\n",
    "            'bruker_id': str(uuid.uuid4()),\n",
    "            'ip_adresse': fake.ipv4(),\n",
    "            'enhet_id': fake.uuid4(),\n",
    "            'tidsstempel': fake.date_time_between(start_date='-1y', end_date='now'),\n",
    "            \n",
    "            # 🔵 Atferdsdata\n",
    "            'antall_klikk': fake.random_int(0, 100),\n",
    "            'session_lengde': fake.random_int(10, 3600),\n",
    "            'sider_besøkt': fake.random_int(1, 50)\n",
    "        }\n",
    "        data.append(record)\n",
    "    \n",
    "    return pd.DataFrame(data)\n",
    "\n",
    "# Lag datasettet\n",
    "df = create_sample_dataset()\n",
    "print(f\"📊 Opprettet datasett med {len(df)} rader og {len(df.columns)} kolonner\")\n",
    "print(\"\\n🔍 La oss se på de første radene:\")\n",
    "df.head(3)"
   ],
   "outputs": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🚨 GDPR Personaldata Klassifisering\n",
    "\n",
    "def classify_gdpr_data(dataframe):\n",
    "    \"\"\"Klassifiserer kolonner etter GDPR personopplysningstyper\"\"\"\n",
    "    \n",
    "    classification = {\n",
    "        '🔴 Direkte identifiserbare': {\n",
    "            'columns': ['navn', 'fodselsnummer', 'epost', 'telefon'],\n",
    "            'risk': 'HØYEST',\n",
    "            'gdpr_article': 'Art. 4(1) - Personopplysninger',\n",
    "            'action_required': 'Sterkt rettslig grunnlag påkrevd'\n",
    "        },\n",
    "        '🟡 Indirekte identifiserbare': {\n",
    "            'columns': ['postnummer', 'alder', 'kjonn', 'inntekt'],\n",
    "            'risk': 'HØY',\n",
    "            'gdpr_article': 'Art. 4(1) - Kan kombineres for identifikasjon',\n",
    "            'action_required': 'Vurder anonymisering/pseudonymisering'\n",
    "        },\n",
    "        '🟠 Nettidentifikatorer': {\n",
    "            'columns': ['ip_adresse', 'enhet_id', 'bruker_id'],\n",
    "            'risk': 'MEDIUM',\n",
    "            'gdpr_article': 'Art. 4(1) - Online identifikatorer',\n",
    "            'action_required': 'Kan kreve personvernstiltak'\n",
    "        },\n",
    "        '🔵 Atferdsdata': {\n",
    "            'columns': ['antall_klikk', 'session_lengde', 'sider_besøkt', 'tidsstempel'],\n",
    "            'risk': 'MEDIUM',\n",
    "            'gdpr_article': 'Art. 4(1) - Kan være personopplysninger hvis knyttet til person',\n",
    "            'action_required': 'Avhenger av kontekst og kobling til andre data'\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    print(\"🏷️ GDPR DATAKLASSIFISERING\\n\" + \"=\"*50)\n",
    "    \n",
    "    for category, info in classification.items():\n",
    "        print(f\"\\n{category} (Risiko: {info['risk']})\")\n",
    "        print(f\"📋 Kolonner: {info['columns']}\")\n",
    "        print(f\"⚖️ GDPR: {info['gdpr_article']}\")\n",
    "        print(f\"🎯 Handling: {info['action_required']}\")\n",
    "    \n",
    "    return classification\n",
    "\n",
    "# Kjør klassifiseringen\n",
    "gdpr_classification = classify_gdpr_data(df)"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ⚖️ Del 2: Rettslige grunnlag - Hvorfor har du lov til å behandle data?\n",
    "\n",
    "GDPR Artikkel 6 krever at du har et gyldig rettslig grunnlag for all databehandling. La oss utforske de 6 grunnlagene!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# ⚖️ GDPR Artikkel 6 - Rettslige grunnlag\n",
    "\n",
    "def analyze_legal_basis():\n",
    "    \"\"\"Viser de 6 rettslige grunnlagene og når de brukes for AI\"\"\"\n",
    "    \n",
    "    legal_basis = {\n",
    "        'Art. 6(1)(a) - Samtykke': {\n",
    "            'description': 'Den registrerte har samtykket',\n",
    "            'ai_examples': ['Personalisert reklame', 'Anbefalingssystemer', 'Chatbots'],\n",
    "            'pros': ['Klar tillatelse', 'Høy legitimitet'],\n",
    "            'cons': ['Kan trekkes tilbake', 'Må være spesifikt og informert'],\n",
    "            'ai_challenges': 'Hvordan gi samtykke til ML-modeller som endrer seg?'\n",
    "        },\n",
    "        'Art. 6(1)(b) - Kontrakt': {\n",
    "            'description': 'Nødvendig for kontraktoppfyllelse',\n",
    "            'ai_examples': ['Kredittscoring', 'Forsikringsprising', 'Leveringstidsestimering'],\n",
    "            'pros': ['Stabil juridisk base', 'Forretningsmessig nødvendighet'],\n",
    "            'cons': ['Kun for kontraktsformål', 'Begrenset sekundærbruk'],\n",
    "            'ai_challenges': 'AI må være \"nødvendig\" for kontrakten'\n",
    "        },\n",
    "        'Art. 6(1)(c) - Lovpålagt': {\n",
    "            'description': 'Påkrevd av lov',\n",
    "            'ai_examples': ['AML-screening', 'Skatteberegning', 'Regulatorisk rapportering'],\n",
    "            'pros': ['Lovpålagt = legitimt', 'Klar hjemmel'],\n",
    "            'cons': ['Kun for lovpålagte formål', 'Kan ikke utvides'],\n",
    "            'ai_challenges': 'Gamle lover dekker sjelden nye AI-bruksområder'\n",
    "        },\n",
    "        'Art. 6(1)(d) - Vitale interesser': {\n",
    "            'description': 'Beskytter liv eller helse',\n",
    "            'ai_examples': ['Medisinsk nød-AI', 'Katastroferesponssystemer', 'COVID-19 sporing'],\n",
    "            'pros': ['Høy moralsk legitimitet', 'Nødsituasjoner'],\n",
    "            'cons': ['Kun i ekstreme situasjoner', 'Midlertidig'],\n",
    "            'ai_challenges': 'Vanskelig å definere \"vitale\" interesser for AI'\n",
    "        },\n",
    "        'Art. 6(1)(e) - Offentlig oppgave': {\n",
    "            'description': 'Utførelse av offentlig oppgave',\n",
    "            'ai_examples': ['Offentlige tjenester', 'Byplanlegging', 'Trafikkovervåking'],\n",
    "            'pros': ['Stabil for offentlig sektor', 'Samfunnsnytte'],\n",
    "            'cons': ['Kun offentlige organer', 'Må være lovhjemlet'],\n",
    "            'ai_challenges': 'Krever klar offentlig mandat for AI-bruk'\n",
    "        },\n",
    "        'Art. 6(1)(f) - Berettiget interesse': {\n",
    "            'description': 'Berettiget interesse (balanse-test)',\n",
    "            'ai_examples': ['Svindeldeteksjon', 'Nettverkssikkerhet', 'Forretningsanalyse'],\n",
    "            'pros': ['Fleksibel', 'Kommersielt nyttig'],\n",
    "            'cons': ['Krever balanse-test', 'Kan utfordres'],\n",
    "            'ai_challenges': 'Vanskelig å balansere AI-innovasjon mot personvern'\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    print(\"⚖️ GDPR RETTSLIGE GRUNNLAG FOR AI\\n\" + \"=\"*60)\n",
    "    \n",
    "    for basis, details in legal_basis.items():\n",
    "        print(f\"\\n📋 {basis}\")\n",
    "        print(f\"   📝 {details['description']}\")\n",
    "        print(f\"   🤖 AI-eksempler: {', '.join(details['ai_examples'])}\")\n",
    "        print(f\"   ✅ Fordeler: {', '.join(details['pros'])}\")\n",
    "        print(f\"   ❌ Ulemper: {', '.join(details['cons'])}\")\n",
    "        print(f\"   🚧 AI-utfordring: {details['ai_challenges']}\")\n",
    "    \n",
    "    return legal_basis\n",
    "\n",
    "# Vis rettslige grunnlag\n",
    "legal_basis_info = analyze_legal_basis()"
   ],
   "outputs": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🧮 Interaktiv Legal Basis Calculator\n",
    "\n",
    "def legal_basis_calculator(use_case, data_types, business_context):\n",
    "    \"\"\"Hjelper med å identifisere passende rettslig grunnlag\"\"\"\n",
    "    \n",
    "    recommendations = []\n",
    "    \n",
    "    # Regelbasert logikk for anbefalinger\n",
    "    if 'medisinsk' in use_case.lower() or 'helse' in use_case.lower():\n",
    "        if 'nød' in use_case.lower() or 'akutt' in use_case.lower():\n",
    "            recommendations.append(('Art. 6(1)(d) - Vitale interesser', 95))\n",
    "        else:\n",
    "            recommendations.append(('Art. 6(1)(b) - Kontrakt', 85))\n",
    "            recommendations.append(('Art. 6(1)(a) - Samtykke', 80))\n",
    "    \n",
    "    if 'markedsføring' in use_case.lower() or 'anbefaling' in use_case.lower():\n",
    "        recommendations.append(('Art. 6(1)(a) - Samtykke', 90))\n",
    "        recommendations.append(('Art. 6(1)(f) - Berettiget interesse', 70))\n",
    "    \n",
    "    if 'sikkerhet' in use_case.lower() or 'svindel' in use_case.lower():\n",
    "        recommendations.append(('Art. 6(1)(f) - Berettiget interesse', 95))\n",
    "    \n",
    "    if 'offentlig' in business_context.lower():\n",
    "        recommendations.append(('Art. 6(1)(e) - Offentlig oppgave', 90))\n",
    "    \n",
    "    # Sorter etter score\n",
    "    recommendations.sort(key=lambda x: x[1], reverse=True)\n",
    "    \n",
    "    return recommendations[:3]  # Top 3 anbefalinger\n",
    "\n",
    "# Test kalkulatoren\n",
    "print(\"🧮 LEGAL BASIS CALCULATOR\\n\" + \"=\"*40)\n",
    "\n",
    "test_cases = [\n",
    "    {\n",
    "        'use_case': 'Personaliserte produktanbefalinger i e-handel',\n",
    "        'data_types': ['kjøpshistorikk', 'nettleseratferd'],\n",
    "        'business_context': 'Kommersielt selskap'\n",
    "    },\n",
    "    {\n",
    "        'use_case': 'AI-assistert medisinsk diagnose',\n",
    "        'data_types': ['helseopplysninger', 'røntgenbilder'],\n",
    "        'business_context': 'Privat sykehus'\n",
    "    },\n",
    "    {\n",
    "        'use_case': 'Svindeldeteksjon i banktransaksjoner',\n",
    "        'data_types': ['transaksjonsdata', 'atferdsmønstre'],\n",
    "        'business_context': 'Bank'\n",
    "    }\n",
    "]\n",
    "\n",
    "for i, case in enumerate(test_cases, 1):\n",
    "    print(f\"\\n📝 Test Case {i}: {case['use_case']}\")\n",
    "    recommendations = legal_basis_calculator(**case)\n",
    "    \n",
    "    print(\"🎯 Anbefalte rettslige grunnlag:\")\n",
    "    for basis, score in recommendations:\n",
    "        print(f\"   {basis} (Score: {score}%)\")"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🤖 Del 3: Automatiserte beslutninger og \"Rett til forklaring\"\n",
    "\n",
    "GDPR Artikkel 22 gir spesielle regler for automatiserte beslutninger. Dette er superintensivt for AI-systemer!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🤖 GDPR Artikkel 22 - Automatiserte beslutninger\n",
    "\n",
    "def analyze_automated_decisions():\n",
    "    \"\"\"Analyserer GDPR krav til automatiserte beslutninger\"\"\"\n",
    "    \n",
    "    print(\"🤖 GDPR ART. 22: AUTOMATISERTE BESLUTNINGER\\n\" + \"=\"*50)\n",
    "    \n",
    "    # Hovedregelen\n",
    "    print(\"📜 HOVEDREGEL (Art. 22(1)):\")\n",
    "    print(\"Den registrerte skal ha rett til ikke å være gjenstand for\")\n",
    "    print(\"avgjørelser som utelukkende bygger på automatisert behandling\")\n",
    "    print(\"og som får rettsvirkning eller på tilsvarende måte i betydelig\")\n",
    "    print(\"grad påvirker vedkommende.\\n\")\n",
    "    \n",
    "    # Nøkkelkriterier\n",
    "    criteria = {\n",
    "        '🔸 Utelukkende automatisert': [\n",
    "            'Ingen meningsfull menneskelig inngripen',\n",
    "            'AI/algoritme tar endelig beslutning',\n",
    "            'Menneske kan ikke overstyre eller endre'\n",
    "        ],\n",
    "        '🔸 Rettsvirkning': [\n",
    "            'Påvirker juridiske rettigheter',\n",
    "            'Kontraktsvilkår endres',\n",
    "            'Tilgang til tjenester påvirkes'\n",
    "        ],\n",
    "        '🔸 Betydelig påvirkning': [\n",
    "            'Økonomiske konsekvenser',\n",
    "            'Sosiale konsekvenser', \n",
    "            'Påvirker livssituasjon eller muligheter'\n",
    "        ]\n",
    "    }\n",
    "    \n",
    "    print(\"🎯 NØKKELKRITERIER:\")\n",
    "    for criterion, examples in criteria.items():\n",
    "        print(f\"\\n{criterion}\")\n",
    "        for example in examples:\n",
    "            print(f\"   • {example}\")\n",
    "    \n",
    "    return criteria\n",
    "\n",
    "# Kjør analysen\n",
    "art22_criteria = analyze_automated_decisions()"
   ],
   "outputs": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "source": [
    "# 🔍 Automatisert beslutning checker\n",
    "\n",
    "def check_automated_decision(decision_description, has_human_involvement, \n",
    "                           legal_effects, significant_effects):\n",
    "    \"\"\"Sjekker om en beslutning faller under GDPR Art. 22\"\"\"\n",
    "    \n",
    "    score = 0\n",
    "    warnings = []\n",
    "    requirements = []\n",
    "    \n",
    "    print(f\"🔍 ANALYSERER: {decision_description}\\n\")\n",
    "    \n",
    "    # Sjekk automatisering\n",
    "    if not has_human_involvement:\n",
    "        score += 1\n",
    "        warnings.append(\"⚠️ Beslutningen er fullt automatisert\")\n",
    "        requirements.append(\"Vurder menneskelig involvering\")\n",
    "    else:\n",
    "        print(\"✅ Menneskelig involvering tilstede\")\n",
    "    \n",
    "    # Sjekk rettsvirkning\n",
    "    if legal_effects:\n",
    "        score += 1\n",
    "        warnings.append(\"⚠️ Har rettsvirkning for individet\")\n",
    "        requirements.append(\"Krever sterkt rettslig grunnlag\")\n",
    "    \n",
    "    # Sjekk betydelig påvirkning\n",
    "    if significant_effects:\n",
    "        score += 1\n",
    "        warnings.append(\"⚠️ Har betydelig påvirkning på individet\")\n",
    "        requirements.append(\"Krever transparens og forklaringer\")\n",
    "    \n",
    "    # Vurdering\n",
    "    if score >= 2:\n",
    "        risk_level = \"🚨 HØY RISIKO - GDPR Art. 22 gjelder sannsynligvis\"\n",
    "        requirements.extend([\n",
    "            \"Implementer rett til menneskelig inngripen\",\n",
    "            \"Gi meningsfulle forklaringer\",\n",
    "            \"Dokumenter beslutningslogikken\",\n",
    "            \"Vurder DPIA (Data Protection Impact Assessment)\"\n",
    "        ])\n",
    "    elif score == 1:\n",
    "        risk_level = \"🟡 MEDIUM RISIKO - Vurder ytterligere tiltak\"\n",
    "    else:\n",
    "        risk_level = \"🟢 LAV RISIKO - Art. 22 gjelder sannsynligvis ikke\"\n",
    "    \n",
    "    print(f\"📊 RISIKOVURDERING: {risk_level}\\n\")\n",
    "    \n",
    "    if warnings:\n",
    "        print(\"⚠️ IDENTIFISERTE BEKYMRINGER:\")\n",
    "        for warning in warnings:\n",
    "            print(f\"   {warning}\")\n",
    "        print()\n",
    "    \n",
    "    if requirements:\n",
    "        print(\"📋 ANBEFALTE TILTAK:\")\n",
    "        for req in requirements:\n",
    "            print(f\"   • {req}\")\n",
    "    \n",
    "    return {'risk_level': risk_level, 'score': score, 'requirements': requirements}\n",
    "\n",
    "# Test på forskjellige scenarioer\n",
    "print(\"🧪 TESTING AUTOMATED DECISION CHECKER\\n\" + \"=\"*50)\n",
    "\n",
    "# Scenario 1: Lånesøknad\n",
    "print(\"\\n\" + \"-\"*60)\n",
    "result1 = check_automated_decision(\n",
    "    decision_description=\"AI-basert automatisk avslag på lånesøknad\",\n",
    "    has_human_involvement=False,\n",
    "    legal_effects=True,\n",
    "    significant_effects=True\n",
    ")\n",
    "\n",
    "print(\"\\n\" + \"-\"*60)\n",
    "# Scenario 2: Produktanbefaling\n",
    "result2 = check_automated_decision(\n",
    "    decision_description=\"AI-drevne produktanbefalinger i nettbutikk\",\n",
    "    has_human_involvement=False,\n",
    "    legal_effects=False,\n",
    "    significant_effects=False\n",
    ")"
   ],
   "outputs": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 🛡️ Del 4: Privacy by Design - Praktisk implementering\n",
    "\n",
    "Privacy by Design er ikke bare et konsept - det er praktiske prinsipper du kan kode inn i systemene dine!"
   ]
  },
  {
     "cell_type": "code",
     "execution_count": null,
     "metadata": {},
     "source": [
      "# 🛡️ Privacy by Design implementering\n",
      "\n",
      "class PrivacyByDesignFramework:\n",
      "    \"\"\"Praktisk rammeverk for Privacy by Design i AI-systemer\"\"\"\n",
      "    \n",
      "    def __init__(self):\n",
      "        self.principles = {\n",
      "            '1. Proactive not Reactive': 'Forebygg personvernbrudd før de skjer',\n",
      "            '2. Privacy as the Default': 'Maksimalt personvern uten handling fra brukeren',\n",
      "            '3. Built into Design': 'Personvern bygget inn fra starten', \n",
      "            '4. Full Functionality': 'Alle funksjoner bevares med personvern',\n",
      "            '5. End-to-End Security': 'Sikkerhet gjennom hele datalivssyklusen',\n",
      "            '6. Visibility and Transparency': 'Alle parter kan verifisere personverntiltak',\n",
      "            '7. Respect for User Privacy': 'Brukerens interesser kommer først'\n",
      "        }\n",
      "    \n",
      "    def assess_system(self, system_description):\n",
      "        \"\"\"Vurder et systems privacy by design implementering\"\"\"\n",
      "        print(f\"�� PRIVACY BY DESIGN VURDERING: {system_description}\\n\")\n",
      "        \n",
      "        # Sjekkliste for hvert prinsipp\n",
      "        checklist = {\n",
      "            'Proactive': ['Data Protection Impact Assessment utført?', 'Risikoanalyse gjennomført?'],\n",
      "            'Default': ['Minste tilgangsrettigheter som standard?', 'Opt-in fremfor opt-out?'],\n",
      "            'Design': ['Personvern vurdert i arkitektur?', 'Kryptografi fra start?'],\n",
      "            'Functionality': ['Alle funksjoner tilgjengelige?', 'Personvern ikke hindrer bruk?'],\n",
      "            'Security': ['End-to-end kryptering?', 'Sikre lagringsmetoder?'],\n",
      "            'Transparency': ['Dokumentert personvernlogikk?', 'Brukerinformasjon tilgjengelig?'],\n",
      "            'User_Privacy': ['Brukerkontroll over data?', 'Tydelige rettigheter?']\n",
      "        }\n",
      "        \n",
      "        total_score = 0\n",
      "        max_score = 0\n",
      "        \n",
      "        for principle, checks in checklist.items():\n",
      "            print(f\"�� {principle.upper()}:\")\n",
      "            principle_score = 0\n",
      "            for check in checks:\n",
      "                print(f\"   □ {check}\")\n",
      "                principle_score += 1\n",
      "            max_score += len(checks)\n",
      "            print(f\"   Score: {principle_score}/{len(checks)}\\n\")\n",
      "        \n",
      "        print(f\"�� TOTAL SCORE: {total_score}/{max_score}\")\n",
      "        \n",
      "        if total_score >= max_score * 0.8:\n",
      "            print(\"�� UTMEERKET: Privacy by Design godt implementert!\")\n",
      "        elif total_score >= max_score * 0.6:\n",
      "            print(\"🟡 GODT: Noen forbedringer nødvendige\")\n",
      "        else:\n",
      "            print(\"🔴 BEHOV FOR FORBEDRING: Privacy by Design krever mer arbeid\")\n",
      "    \n",
      "    def generate_privacy_checklist(self):\n",
      "        \"\"\"Generer en praktisk sjekkliste for utviklere\"\"\"\n",
      "        print(\"�� PRAKTISK PRIVACY BY DESIGN SJEKKLISTE\\n\")\n",
      "        print(\"=\" * 50)\n",
      "        \n",
      "        checklist_items = [\n",
      "            \"🔐 KRYPTOLOGI:\",\n",
      "            \"   □ Data kryptert i ro (at rest)\",\n",
      "            \"   □ Data kryptert under overføring (in transit)\",\n",
      "            \"   □ Sterke krypteringsalgoritmer (AES-256, RSA-2048+)\",\n",
      "            \"   □ Sikre nøkkelhåndteringsprosedyrer\",\n",
      "            \"\",\n",
      "            \"�� BRUKERKONTROLL:\",\n",
      "            \"   □ Enkel dataeksport (GDPR Art. 20)\",\n",
      "            \"   □ Mulighet for sletting (GDPR Art. 17)\",\n",
      "            \"   □ Tydelige samtykkevalg\",\n",
      "            \"   □ Transparent databruk\",\n",
      "            \"\",\n",
      "            \"🏗️ ARKITEKTUR:\",\n",
      "            \"   □ Data minimering (kun nødvendig data)\",\n",
      "            \"   □ Purpose limitation (klar formål)\",\n",
      "            \"   □ Storage limitation (begrenset lagringstid)\",\n",
      "            \"   □ Privacy by default innstillinger\",\n",
      "            \"\",\n",
      "            \"📊 TRANSPARENS:\",\n",
      "            \"   □ Tydelig personvernpolicy\",\n",
      "            \"   □ Forklarbare AI-beslutninger\",\n",
      "            \"   □ Dokumentert databruk\",\n",
      "            \"   □ Regelmessig personvernrevisjon\"\n",
      "        ]\n",
      "        \n",
      "        for item in checklist_items:\n",
      "            print(item)\n",
      "    \n",
      "    def create_privacy_policy_template(self):\n",
      "        \"\"\"Generer en mal for personvernpolicy\"\"\"\n",
      "        template = \"\"\"\n",
      "📄 PERSONVERNPOLICY MAL\n",
      "=======================\n",
      "\n",
      "1. HVIKE DATA SAMLER VI INN?\n",
      "   • [Beskriv hvilke personopplysninger som samles inn]\n",
      "   • [Hvorfor samles dataene inn]\n",
      "   • [Hvordan dataene samles inn]\n",
      "\n",
      "2. HVORDAN BRUKER VI DATAENE?\n",
      "   • [Formål med databehandling]\n",
      "   • [Rettslig grunnlag (GDPR Art. 6)]\n",
      "   • [Hvem får tilgang til dataene]\n",
      "\n",
      "3. DINE RETTIGHETER\n",
      "   • Rett til innsyn (Art. 15)\n",
      "   • Rett til retting (Art. 16)\n",
      "   • Rett til sletting (Art. 17)\n",
      "   • Rett til begrensning (Art. 18)\n",
      "   • Rett til dataportabilitet (Art. 20)\n",
      "   • Rett til innsigelse (Art. 21)\n",
      "\n",
      "4. SIKKERHET OG BESKYTTELSE\n",
      "   • [Beskriv sikkerhetstiltak]\n",
      "   • [Data lagres trygt]\n",
      "   • [Kryptering og tilgangskontroll]\n",
      "\n",
      "5. KONTAKT OSS\n",
      "   • [Kontaktinformasjon for personvernspørsmål]\n",
      "   • [Data Protection Officer (DPO) kontakt]\n",
      "        \"\"\"\n",
      "        \n",
      "        print(template)\n",
      "\n",
      "# Test rammeverket\n",
      "print(\"�� TESTING PRIVACY BY DESIGN FRAMEWORK\\n\" + \"=\"*60)\n",
      "\n",
      "# Opprett rammeverk\n",
      "privacy_framework = PrivacyByDesignFramework()\n",
      "\n",
      "# Test systemvurdering\n",
      "privacy_framework.assess_system(\"AI-drevet helseapp med MR-bildeanalyse\")\n",
      "\n",
      "print(\"\\n\" + \"=\"*60)\n",
      "\n",
      "# Generer sjekkliste\n",
      "privacy_framework.generate_privacy_checklist()\n",
      "\n",
      "print(\"\\n\" + \"=\"*60)\n",
      "\n",
      "# Generer policy mal\n",
      "privacy_framework.create_privacy_policy_template()\n",
      "\n",
      "print(\"\\n\" + \"=\"*60)\n",
      "print(\"🎯 NESTE STEG FOR DIN AI-UTVIKLING:\")\n",
      "print(\"=\"*60)\n",
      "print(\"1. Implementer Privacy by Design fra dag én\")\n",
      "print(\"2. Gjennomfør Data Protection Impact Assessment (DPIA)\")\n",
      "print(\"3. Dokumenter alle personverntiltak\")\n",
      "print(\"4. Test personvernfunksjoner regelmessig\")\n",
      "print(\"5. Hold deg oppdatert på personvernlover\")\n",
      "print(\"6. Tren teamet ditt på personvern og etikk\")\n",
      "print(\"\\n�� HUSK: God personvern er ikke bare lovpålagt - det er god forretning!\")\n",
      "print(\"   Det bygger tillit, reduserer risiko og forbedrer brukeropplevelsen.\")\n",
      "print(\"\\n🌍 La oss bygge AI som verden kan stole på! 🛡️\")"
     ],
     "outputs": []
    }
